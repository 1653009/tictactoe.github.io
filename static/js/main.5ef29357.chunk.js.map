{"version":3,"sources":["tictactoe/Square.js","tictactoe/Board.js","tictactoe/Game.js","index.js"],"names":["Square","props","win","className","onClick","value","SquareRow","squareRow","this","row","map","square","idx","k","winner","rowIdx","direction","x","y","console","log","key","React","Component","Board","i","squares","board","Game","tmpArr","Array","fill","state","inputWidth","inputHeight","width","height","history","location","stepNumber","xIsNext","isDescending","handleChangeHeight","bind","handleChangeWidth","sort","step","setState","j","slice","current","calculateWinner","concat","length","e","val","Number","target","status","moves","move","desc","jumpTo","reverse","arrow","class","type","placeholder","onChange","handleClick","nSquareToWin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ef29357.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst nSquareToWin = 5;\r\n\r\nfunction Square(props) {\r\n  return (props.win) ? (\r\n    <button className=\"square square-highlight\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  ) : (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>  \r\n  )  ;\r\n}\r\n\r\n\r\nclass SquareRow extends React.Component {\r\n  render() {\r\n    let squareRow = this.props.row.map((square, idx) => {\r\n      let k = \"s\" + idx;\r\n      let win = false;\r\n      let winner = this.props.winner;\r\n      let rowIdx = this.props.rowIdx;\r\n      if (winner) {\r\n        if (winner.direction === \"ToRight\" &&\r\n          idx >= winner.x && idx <= winner.x + nSquareToWin - 1 && rowIdx === winner.y) {\r\n            win = true;\r\n        }\r\n        if (winner.direction === \"ToDown\" &&\r\n            rowIdx >= winner.y && rowIdx <= winner.y + nSquareToWin - 1 && idx === winner.x) {\r\n            win = true;\r\n        }\r\n        if (winner.direction === \"ToRightDown\" &&\r\n          idx >= winner.x && idx <= winner.x + nSquareToWin - 1 && idx - winner.x === rowIdx - winner.y) {\r\n            win = true;\r\n        }\r\n        if (winner.direction === \"ToLeftDown\" &&\r\n          idx <= winner.x && idx >= winner.x - nSquareToWin + 1 && winner.x - idx === rowIdx - winner.y) {\r\n            console.log(winner.x+' '+winner.y+' '+idx+' '+rowIdx+' '+nSquareToWin);\r\n            win = true;\r\n        }\r\n      }\r\n      return (\r\n        <Square win={win} value={square} onClick={() => this.props.onClick(this.props.rowIdx, idx)} key={k} />\r\n      )\r\n    })\r\n    return (\r\n      <div className=\"board-row\">\r\n        {squareRow}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SquareRow;","import React from 'react';\r\nimport Square from './Square';\r\nimport SquareRow from './Square';\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]} \r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    let board;\r\n    board = this.props.squares.map((row, idx) => {\r\n      let k = \"r\" + idx;\r\n      return (\r\n        <SquareRow winner={this.props.winner} rowIdx={idx} row={row} onClick={this.props.onClick} key={k}/>\r\n      )\r\n    })\r\n    return (\r\n      <div>\r\n        {board}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport Board from './Board';\r\nconst defaultWidth = 10;\r\nconst defaultHeight = 10;\r\nconst minSize = 5;\r\nconst maxSize = 25;\r\nconst nSquareToWin = 5;\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let tmpArr = Array(defaultHeight);\r\n    for (let i = 0; i < defaultHeight; i++) {\r\n      tmpArr[i] = Array(defaultWidth).fill(null);\r\n    }\r\n    this.state = {\r\n      inputWidth: defaultWidth,\r\n      inputHeight: defaultHeight,\r\n      width: defaultWidth,\r\n      height: defaultHeight,\r\n      history: [{\r\n        squares: tmpArr,\r\n        location: null,\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      isDescending: true,\r\n    };\r\n    this.handleChangeHeight = this.handleChangeHeight.bind(this);\r\n    this.handleChangeWidth = this.handleChangeWidth.bind(this);\r\n    this.sort = this.sort.bind(this);\r\n  }\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    })\r\n  }\r\n  handleClick(i, j) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[this.state.stepNumber];\r\n    const squares = current.squares.slice();\r\n    current.squares.map((row, idx) => {\r\n      squares[idx] = current.squares[idx].slice();\r\n      return true;\r\n    })\r\n    if (calculateWinner(squares) || squares[i][j]) {\r\n      return;\r\n    }\r\n    squares[i][j] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        location: {x: i, y: j}\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n  sort() {\r\n    this.setState({isDescending: !this.state.isDescending});\r\n  }\r\n  handleChangeWidth(e) {\r\n    const val = Number(e.target.value);\r\n    this.setState({inputWidth: val});\r\n    if (val >= minSize && val <= maxSize) {\r\n      let tmpArr = Array(this.state.height);\r\n      for (let i = 0; i < this.state.height; i++) {\r\n        tmpArr[i] = Array(val).fill(null);\r\n      }\r\n      this.setState({\r\n        width: val,\r\n        history: [{\r\n          squares: tmpArr,\r\n          location: null,\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n      });\r\n    }\r\n  }\r\n  handleChangeHeight(e) {\r\n    const val = Number(e.target.value);\r\n    this.setState({inputHeight: val});\r\n    if (val >= minSize && val <= maxSize) {\r\n      let tmpArr = Array(val);\r\n      for (let i = 0; i < val; i++) {\r\n        tmpArr[i] = Array(this.state.width).fill(null);\r\n      }\r\n      this.setState({\r\n        height: Number(val),\r\n        history: [{\r\n          squares: tmpArr,\r\n          location: null,\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    let moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move + ' (' + step.location.x + ',' + step.location.y + ')' :\r\n        'Go to game start';\r\n      return (this.state.stepNumber === move) ? (\r\n        <li key={move}>\r\n          <button className=\"btn-bold\" onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      ) : (\r\n        <li key={move}>\r\n        <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n      </li>\r\n      );\r\n    });\r\n    if (!this.state.isDescending) {\r\n      moves = moves.reverse();\r\n    }\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner.val;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    let arrow = this.state.isDescending ? '↓' : '↑'\r\n    return (\r\n      <div class=\"content\">\r\n        <div className=\"game-config\">\r\n          <span className=\"fixed-size\">Chiều rộng:</span><input type=\"number\" placeholder=\"Chiều rộng\" value={this.state.inputWidth} onChange={this.handleChangeWidth} />\r\n          <br />\r\n          <span className=\"fixed-size\">Chiều cao:</span><input type=\"number\" placeholder=\"Chiều cao\" value={this.state.inputHeight} onChange={this.handleChangeHeight} />\r\n        </div>\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board\r\n              squares={current.squares}\r\n              onClick={(i, j) => this.handleClick(i, j)}\r\n              winner={winner}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>\r\n              <button onClick={this.sort}>Thứ tự bước {arrow}</button>\r\n            </div>\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n        <div class='footer'>1653009 - Ngo Anh Canh</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\nfunction calculateWinner(squares) {\r\n  let win;\r\n  for (let i = 0; i < squares.length; i++) {\r\n    for (let j = 0; j < squares[i].length; j++) {\r\n\r\n      if (!squares[i][j]) continue;\r\n      if (j <= squares[i].length - nSquareToWin) {\r\n        win = true;\r\n        for (let k = 0; k < nSquareToWin - 1; k++) {\r\n          if (squares[i][j + k] !== squares[i][j + k + 1]) {\r\n            win = false\r\n          }\r\n        }\r\n        if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToRight'};\r\n      }\r\n      if (i <= squares.length - nSquareToWin) {\r\n        win = true;\r\n        for (let k = 0; k < nSquareToWin - 1; k++) {\r\n          if (squares[i + k][j] !== squares[i + k + 1][j]) {\r\n            win = false\r\n          }\r\n        }\r\n        if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToDown'};\r\n      }\r\n      if (j <= squares[i].length - nSquareToWin && i <= squares.length - nSquareToWin) {\r\n        win = true;\r\n        for (let k = 0; k < nSquareToWin - 1; k++) {\r\n          if (squares[i + k][j + k] !== squares[i + k + 1][j + k + 1]) {\r\n            win = false\r\n          }\r\n        }\r\n        if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToRightDown'};\r\n      }\r\n      if (i <= squares.length - nSquareToWin && j >= nSquareToWin - 1) {\r\n        win = true;\r\n        for (let k = 0; k < nSquareToWin - 1; k++) {\r\n          if (squares[i + k][j - k] !== squares[i + k + 1][j - k - 1]) {\r\n            win = false\r\n          }\r\n        }\r\n        if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToLeftDown'};\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './tictactoe/Game';\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);"],"sourceRoot":""}